#!/usr/bin/env groovy


deliveryPipelineView('Demo/Pipeline') {
    pipelineInstances(5)
    allowPipelineStart()
    enableManualTriggers()
    enablePaging()
    linkToConsoleLog()
    showChangeLog()
    showDescription()
    pipelines {
        component('Component', 'Demo/Build')
    }
}

job('Build') {
    deliveryPipelineConfiguration("Build", "Build")
    scm {
        git {
            remote {
                url('https://github.com/Diabol/delivery-pipeline-plugin')
            }
        }
    }
    wrappers {
        deliveryPipelineVersion('1.0.0.\$BUILD_NUMBER', true)
    }
    publishers {
        // downstreamParameterized {
        //     trigger('Demo/Sonar') {
        //         parameters {
        //             currentBuild()
        //         }
        //     }
        //     trigger('Demo/DeployCI') {
        //         condition('SUCCESS')
        //         parameters {
        //             currentBuild()
        //         }
        //     }
        // }
        downstream('Terraform/env-dev-plan', 'SUCCESS')
    }
}


job('Terraform/env-dev-plan') {
    deliveryPipelineConfiguration("env-dev", "Plan")

    wrappers {
        buildName('\$PIPELINE_VERSION')
    }

    steps {
        shell 'sleep 5'
    }

    publishers {
        buildPipelineTrigger('Terraform/env-dev-apply') {
        }
    }
}

job('Terraform/env-dev-apply') {
    deliveryPipelineConfiguration("env-dev", "Apply")

    wrappers {
        buildName('\$PIPELINE_VERSION')
    }

    steps {
        shell 'sleep 10'
    }


    publishers {
       downstream('Terraform/env-prod-pla', 'SUCCESS')
    }
}

job('Terraform/env-prod-plan') {
    deliveryPipelineConfiguration("env-prod", "Plan")

    wrappers {
        buildName('\$PIPELINE_VERSION')
    }

    steps {
        shell 'sleep 5'
    }

    publishers {
        publishers {
        buildPipelineTrigger('Terraform/env-prod-apply') {
        }
    }
    }
}

job('Terraform/env-prod-apply') {
    deliveryPipelineConfiguration("env-prod", "Apply")

    wrappers {
        buildName('\$PIPELINE_VERSION')
    }

    steps {
        shell 'sleep 10'
    }

    // publishers {
    //     buildPipelineTrigger('Demo/DeployProd') {
    //     }
    // }
}

// job('Demo/DeployProd') {
//     deliveryPipelineConfiguration("Prod", "Deploy")

//     wrappers {
//         buildName('\$PIPELINE_VERSION')
//     }

//     steps {
//         shell 'sleep 5'
//     }

//     publishers {
//         downstreamParameterized {
//             trigger('Demo/TestProd') {
//                 condition('SUCCESS')
//                 parameters {
//                     currentBuild()
//                 }
//             }
//         }
//     }
// }

// job('Demo/TestProd') {
//     deliveryPipelineConfiguration("Prod", "Test")

//     wrappers {
//         buildName('\$PIPELINE_VERSION')
//     }

//     steps {
//         shell 'sleep 5'
//     }
// }
