
// @Grab('org.yaml:snakeyaml:1.17')

// import org.yaml.snakeyaml.Yaml

// def yamlDir = "jenkins-job-test/cicd/configs"

// // checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/faisalp4p/jenkins-job-test.git']]])

// git branch: 'mybranch', url: 'https://github.com/faisalp4p/jenkins-job-test.git'

// def findFiles(def args) {
//     def step = findFiles(args)
//     step.setDelegate(build)
//     step.setBinding(build.executor, build.workspace)
//     step.call()
// }

// def makeStage(def dir, def dStream) {
//     job("${dir}-plan") {
//         deliveryPipelineConfiguration("${dir}", "Plan")

//         wrappers {
//             buildName('\$PIPELINE_VERSION')
//         }

//         steps {
//             shell 'pwd && ls'
//         }

//         publishers {
//             buildPipelineTrigger("${dir}-apply")
//         }
//     }

//      job("${dir}-apply") {
//         deliveryPipelineConfiguration("${dir}", "Apply")

//         wrappers {
//             buildName('\$PIPELINE_VERSION')
//         }

//         steps {
//             shell 'sleep 10'
//         }

//         if (dStream?.trim()) {
//             publishers {
//                 downstream("${dStream}-plan", 'SUCCESS')
//             }
//         }
//     }

// }

// def makePiepine(def stage) {  
//     if (stage.next) {
//         dStream = stage.next
//     } else {
//         dStream = ""
//     }
//     makeStage(stage.dir, dStream)
//     if (stage.next) {
//         makePiepine(stage.next)
//     }
// }

// def yamlFiles = findFiles(glob: "${yamlDir}/*.yaml")

// yamlFiles.each { yamlFile ->
//     def yamlContent = readFile(yamlFile.toString())
//     def config = new Yaml().load(yamlContent)

//     deliveryPipelineView("Terraform - Pipeline ${config.repo}") {
//         pipelineInstances(5)
//         allowPipelineStart()
//         enableManualTriggers()
//         enablePaging()
//         linkToConsoleLog()
//         showChangeLog()
//         showDescription()
//         pipelines {
//             component("Terraform env pipeline ${config.repo}", "Build-${config.repo}")
//         }
//     }

//     job("Build-${config.repo}") {
//         deliveryPipelineConfiguration("Build", "Build")
//         wrappers {
//             deliveryPipelineVersion('1.0.0.\$BUILD_NUMBER', true)
//         }
//         publishers {
//             downstream("${config.pipeline.dir}-plan", 'SUCCESS')
//         }
//     }
//     makePiepine(config.pipeline)

// }


dh = new File("${WORKSPACE}")
dh.eachFile {
    println(it)
}